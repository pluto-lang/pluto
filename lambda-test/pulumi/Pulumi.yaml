name: pulumi-dapr
runtime: yaml
description: use dapr and pulumi to build a aws application
outputs:
  appLambdaName: ${appLambda.id}
  appLambdaARN: ${appLambda.arn}
  url: ${appLambdaUrl.functionUrl}

resources:
  iamForLambda:
    type: aws:iam:Role
    properties:
      assumeRolePolicy: ${assumeRole.json}
  test-attach:
    type: aws:iam:RolePolicyAttachment
    properties:
      role: ${iamForLambda.name}
      policyArn: arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  appLambda:
    type: aws:lambda:Function
    properties:
      packageType: Image
      imageUri: 811762874732.dkr.ecr.us-east-1.amazonaws.com/lambda-test:latest
      role: ${iamForLambda.arn}
      timeout: 120
      environment:
        variables:
          PORT: 8080
    options:
      replaceOnChanges: ["environment.variables"]
  appLambdaUrl:
    type: aws:lambda:FunctionUrl
    properties:
      functionName: ${appLambda.arn}
      authorizationType: NONE

variables:
  assumeRole:
    fn::invoke:
      Function: aws:iam:getPolicyDocument
      Arguments:
        statements:
          - effect: Allow
            principals:
              - type: Service
                identifiers:
                  - lambda.amazonaws.com
            actions:
              - sts:AssumeRole